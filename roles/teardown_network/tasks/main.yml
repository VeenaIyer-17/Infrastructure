---
  - name: EC2 Facts
    ec2_instance_info:
      filters:
        "tag:app": "jenkins"
    register: ec2

  - name: Kill EC2 Instance
    ec2:
      instance_ids: "{{ item.instance_id }}"
      region: us-east-1
      state: 'absent'
      wait: true
    with_items: "{{ ec2.instances }}"

  - name: Get VPC details
    ec2_vpc_net_info:
      filters:
        "tag:Name": "ansibleVPC"
    register: ansibleVPC

  - name: Display VPC
    debug: var=ansibleVPC

  - name: delete internet gateway for ansibleVPC
    ec2_vpc_igw:
      state: 'absent'
      region: "{{ vpc_region }}"
      vpc_id: "{{ ansibleVPC.vpcs[0].vpc_id }}"
      tags:
        Name: ansibleVPC_IGW
    register: ansibleVPC_igw

  - name: get security group info
    ec2_group_info:
      filters:
        vpc-id: "{{ ansibleVPC.vpcs[0].vpc_id }}"
        group_name: sg_ansibleVPC_security_group
    register: security_group

  - name: Display VPC
    debug: var=security_group

  - name: delete security group
    ec2_group:
      region: "{{ vpc_region }}"
      group_id: "{{ security_group.security_groups[0].group_id }}"
      state: 'absent'
    when: security_group.security_groups[0].group_id is defined
  
  - name: get route table
    ec2_vpc_route_table_info:
      region: "{{ vpc_region }}"
      filters:
        vpc-id: "{{ ansibleVPC.vpcs[0].vpc_id }}"
        "tag:Name": rt_ansibleVPC_PublicSubnet
    register: route_table  


  - name: Display route table
    debug: var=route_table

  - name: delete route table
    ec2_vpc_route_table:
      region: "{{ vpc_region }}"
      vpc_id: "{{ ansibleVPC.vpcs[0].vpc_id }}"
      route_table_id: "{{ route_table.route_tables[0].id }}"
      lookup: id
      state: 'absent'
    when: route_table.route_tables[0].id is defined

  - name: delete subnet2
    ec2_vpc_subnet:
      state: 'absent'
      cidr: "{{ subnet_cidr2 }}"
      vpc_id: "{{ ansibleVPC.vpcs[0].vpc_id }}"
      region: "{{ vpc_region }}"
      resource_tags:
        Name: subnet2
    register: subnet2

  - name: delete subnet1
    ec2_vpc_subnet:
      state: 'absent'
      cidr: "{{ subnet_cidr1 }}"
      vpc_id: "{{ ansibleVPC.vpcs[0].vpc_id }}"
      region: "{{ vpc_region }}"
      resource_tags:
        Name: subnet1
    register: subnet1

  - name: delete vpc
    ec2_vpc_net:
      name: ansibleVPC
      cidr_block: "{{ vpc_cidr_block }}"
      region: "{{ vpc_region }}"
      state: 'absent'
    register: ansibleVPC